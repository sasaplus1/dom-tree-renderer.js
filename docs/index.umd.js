!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e||self).domTreeRenderer={})}(this,function(e){function t(){return t=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},t.apply(this,arguments)}var n=/[\0\b\f\n\r\t\v]/g;function r(e){switch(e){case"\0":return"\\0";case"\b":return"\\b";case"\f":return"\\f";case"\n":return"\\n";case"\r":return"\\r";case"\t":return"\\t";case"\v":return"\\v";default:return e}}function o(){return function(e,t,n){var r=document.createElement("ul"),o=document.createElement("li");return o.textContent=e.nodeName,r.appendChild(o),r}}var a=function(e){return e.nodeType===Node.TEXT_NODE?(e.textContent||"").replace(n,r):e.nodeName.toLowerCase()},d={Empty:"   ",I:"|  ",L:"|- ",T:"|- "},i={renderNode:a,shapes:t({},d)};e.asciiShapes=d,e.createDetailsTreeNode=function(e){if(e.nodeType===Node.TEXT_NODE){var t=(e.textContent||"").replace(n,r),o=document.createTextNode(t),a=document.createElement("span");return a.appendChild(o),a}var d=document.createElement("details"),i=document.createElement("summary");return i.textContent=e.nodeName,d.appendChild(i),d},e.createListTreeNodeClosure=o,e.defaultOptions=i,e.defaultRenderNode=a,e.domTree=function e(n,r,a,d){void 0===r&&(r={createTreeNode:o()}),void 0===a&&(a={depth:0,isLastSibling:!1}),void 0===d&&(d=document.createDocumentFragment());var i=a.depth,c=(0,r.createTreeNode)(n,d,t({},a));d.appendChild(c);for(var s=0,u=n.childNodes.length;s<u;s+=1){var p=n.childNodes[s];p&&e(p,r,{depth:i+1,isLastSibling:s===u-1},c)}return d},e.escapeControlCharacter=r,e.escapeControlCharacterRegex=n,e.textTree=function e(n,r,o,a){void 0===r&&(r=t({},i)),void 0===o&&(o={depth:0,isLastSibling:!1,prefix:""}),void 0===a&&(a=[]);var d=r.shapes,c=d.Empty,s=d.I,u=o.depth,p=o.isLastSibling,l=o.prefix,f=0===u;a.push(l+(f?"":p?d.L:d.T)+(0,r.renderNode)(n));for(var h=0,m=n.childNodes.length;h<m;h+=1){var v=n.childNodes[h];v&&e(v,r,{depth:u+1,isLastSibling:h===m-1,prefix:l+(f?"":p?c:s)},a)}return a},e.unicodeShapes={Empty:"   ",I:"│  ",L:"└─ ",T:"├─ "}});
//# sourceMappingURL=index.umd.js.map
